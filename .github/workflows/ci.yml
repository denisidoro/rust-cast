name: Rust Cast CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: Build (Linux)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions-rs/toolchain@v1
        name: Install toolchain
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        name: Check format
        with:
          command: fmt
          args: --all -- --check

      - uses: actions-rs/cargo@v1
        name: Clippy
        with:
          command: clippy
          args: -- -D warnings

      - uses: actions-rs/cargo@v1
        name: Build (default features)
        with:
          command: build
          args: --release --examples

      - uses: actions-rs/cargo@v1
        name: Build (thread-safe feature)
        with:
          command: build
          args: --release --examples --features thread_safe

      - uses: actions-rs/cargo@v1
        name: Test (default features)
        with:
          command: test

      - uses: actions-rs/cargo@v1
        name: Test (thread-safe feature)
        with:
          command: test
          args: --features thread_safe

      - uses: actions-rs/toolchain@v1
        name: Install toolchain
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        name: Build (default features)
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} --examples

      - uses: actions-rs/cargo@v1
        name: Build (thread-safe feature)
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} --examples --features thread_safe
          
      - uses: actions/upload-artifact@v2
        name: Upload APK as artifact
        with:
          name: caster
          path: target/release/examples/rust_caster
          retention-days: 3
